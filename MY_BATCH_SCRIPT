#!/bin/bash

#SBATCH --job-name=test_env_creation
#SBATCH --mem=100G
#SBATCH -t 135:50:00
#SBATCH --gres=gpu:nvidia_a100_80:1
#SBATCH --partition=tier2_gpu
#SBATCH --account=aristeidis_sotiras
#SBATCH --exclude=gpu02
#SBATCH --output=slurm-%A_%a.out
#SBATCH --error=slurm-%A_%a.err

module load cuda/11.3
module load cudnn/8.1.1

source /home/l.peiwang/miniconda3/etc/profile.d/conda.sh
eval "$(conda shell.bash hook)"

export PYTHONNOUSERSITE=1
ENV_NAME="pasta_env_new_2025"

# Check if env exists
conda env list | grep -q "$ENV_NAME"
ENV_EXISTS=$?

if [ $ENV_EXISTS -ne 0 ]; then
    echo "Conda environment '$ENV_NAME' does not exist. Creating it..."
    conda env create -n "$ENV_NAME" --file /home/l.peiwang/PASTA/requirements.yaml
else
    echo "Conda environment '$ENV_NAME' already exists. Skipping creation."
fi

# Activate
conda activate "$ENV_NAME"

# -- Force Re-Install TorchIO if not found --
python -c "import torchio" 2>/dev/null
if [ $? -ne 0 ]; then
    echo "TorchIO not found; installing now..."
    # If conda-forge doesnâ€™t conflict, you could do:
    # conda install -c conda-forge torchio -y
    # Otherwise:
    pip install torchio
fi
pip install einops
# Verify
python -c "import sys; print('Python:', sys.version)"
python -c "import torch; print('PyTorch:', torch.__version__, 'CUDA:', torch.cuda.is_available())"
python -c "import torchio; print('TorchIO:', torchio.__version__)"

# Run your script
python /home/l.peiwang/PASTA/train_mri2pet.py \
    --data_dir /ceph/chpc/shared/aristeidis_sotiras_group/l.peiwang_scratch/datasets \
    --results_folder /ceph/chpc/shared/aristeidis_sotiras_group/l.peiwang_scratch/results \
    --eval_mode false \
    --synthesis false
