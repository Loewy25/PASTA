#!/bin/bash

#SBATCH --job-name=test
#SBATCH -N 1
#SBATCH --mem=100G
#SBATCH -t 135:50:00
#SBATCH --gres=gpu:nvidia_a100_80:1
#SBATCH --partition=tier2_gpu
#SBATCH --account=aristeidis_sotiras
#SBATCH --exclude=gpu02

#SBATCH --output=slurm-%A_%a.out
#SBATCH --error=slurm-%A_%a.err

#######################################
# 1. Load HPC Modules for CUDA/CuDNN
#######################################
module load cuda/11.3
module load cudnn/8.1.1

#######################################
# 2. Install Miniconda if not present
#######################################
MINICONDA_DIR="$HOME/miniconda3"
if [ ! -d "$MINICONDA_DIR" ]; then
    echo "Miniconda not found in $MINICONDA_DIR. Installing..."
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
    bash miniconda.sh -b -p "$MINICONDA_DIR"
    rm miniconda.sh
fi

#######################################
# 3. Initialize Conda in this script
#######################################
source "$MINICONDA_DIR/etc/profile.d/conda.sh"
eval "$(conda shell.bash hook)"

#######################################
# 4. (Optional) Remove old environment
#######################################
ENV_NAME="pasta_env_new"

echo "Removing old environment (if it exists)..."
conda env remove -n "$ENV_NAME" -y 2>/dev/null || true

#######################################
# 5. Create a Fresh Environment
#######################################
echo "Creating fresh environment: $ENV_NAME"
conda create -n "$ENV_NAME" python=3.10 -y

#######################################
# 6. Activate and Install PyTorch + TorchIO
#######################################
conda activate "$ENV_NAME"

# Install PyTorch with CUDA 11.3
conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch -y

# Install TorchIO from conda-forge
conda install torchio -c conda-forge -y
pip install einops
#######################################
# 7. Verification
#######################################
echo "Using Python from: $(which python)"
python -c "import sys; print('Python:', sys.version)"
python -c "import torch; print('PyTorch:', torch.__version__, 'CUDA available:', torch.cuda.is_available())"
python -c "import torchvision; print('TorchVision:', torchvision.__version__)"
python -c "import torchio; print('TorchIO:', torchio.__version__)"

#######################################
# 8. Run Your Training Script
#######################################
python /home/l.peiwang/PASTA/train_mri2pet.py \
    --data_dir /ceph/chpc/shared/aristeidis_sotiras_group/l.peiwang_scratch/ \
    --results_folder /ceph/chpc/shared/aristeidis_sotiras_group/l.peiwang_scratch/results/ \
    --eval_mode false \
    --synthesis false
