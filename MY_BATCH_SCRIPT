#!/bin/bash

#SBATCH --job-name=test             # Assign a descriptive job name
#SBATCH -N 1                        # Request 1 node
#SBATCH --mem=100G                  # Request 100GB memory
#SBATCH -t 5:50:00                  # Set maximum time
#SBATCH --gres=gpu:1                # Request 1 GPU
#SBATCH --partition=tier2_gpu       # Specify GPU partition
#SBATCH --account=aristeidis_sotiras
#SBATCH --exclude=gpu02             # Exclude specific nodes

#SBATCH --output=slurm-%A_%a.out
#SBATCH --error=slurm-%A_%a.err

set -e  # Exit immediately if a command exits with a non-zero status
set -x  # Print commands and their arguments as they are executed

# Load Conda
source /home/l.peiwang/miniconda3/etc/profile.d/conda.sh

# Initialize Conda for use in non-interactive shell
eval "$(conda shell.bash hook)"

# Define environment name
ENV_NAME="pasta_env"

# Activate the Conda environment
conda activate $ENV_NAME

# Verify which Python is being used
echo "Using Python from: $(which python)"

# Verify installation
python -c "import sys; print('Python:', sys.version)"
python -c "import numpy; print('NumPy:', numpy.__version__)"
python -c "import torch; print('PyTorch:', torch.__version__); print('CUDA available:', torch.cuda.is_available())"
python -c "import torchvision; print('TorchVision:', torchvision.__version__)"
python -c "import torchio; print('TorchIO:', torchio.__version__)"

# Load CUDA modules if required (adjust versions as needed)
module load cuda/11.7
module load cudnn/8.5.0

# Run training
python /home/l.peiwang/PASTA/train_mri2pet.py \
    --data_dir /scratch/l.peiwang/ \
    --results_folder /scratch/l.peiwang/results/

# Run evaluation
python /home/l.peiwang/PASTA/train_mri2pet.py \
    --data_dir /scratch/l.peiwang/ \
    --results_folder /scratch/l.peiwang/results/ \
    --eval_mode True \
    --synthesis True

